/*
Title: Fitbit data summary
Purpose: gets HRV info
Author: unknown, Shravan
*/

SELECT participantidentifier, 
  date_format(min(date), '%Y-%m-%d') as start_date,
  date_format(max(date), '%Y-%m-%d') as end_date,
  count(date) as days_hrv_recorded,
  CAST(split_part(CAST(max(date) - min(date) as varchar), ' ', 1) as int) + 1 as calendar_days,
  avg(hrvdailyrmssd) as daily_avg_hrv, avg(hrvdeeprmssd) as deep_avg_hrv,
  min(hrvdailyrmssd) as daily_min_hrv, min(hrvdeeprmssd) as deep_min_hrv,
  max(hrvdailyrmssd) as daily_max_hrv, max(hrvdeeprmssd) as deep_max_hrv
  FROM fitbitdailydata
  WHERE hrvdailyrmssd IS NOT NULL
  GROUP BY participantidentifier
  
  
  
  
 /*
Title: Fitbit Data Investigation
Purpose: compares the 1080 data with the fitbit HRV data, trying to correlate peak HRV values
Author: Alex Christensen
*/

-- get the dates from 1080
select name, date(datetime) as date, exercise
from runs1080p
where name in ('MDH-2099-1317', 'MDH-9236-2653', 'MDH-9897-8182', 'MDH-5948-6311', 'MDH-0769-7310')
and datetime >= DATE('2023-1-12');

--get fitbithrv values
SELECT participantidentifier, date(DATE) as date, hrvdeeprmssd, hrvdailyrmssd from fitbitdailydata 
where participantidentifier in ('MDH-2099-1317', 'MDH-9236-2653', 'MDH-9897-8182', 'MDH-5948-6311', 'MDH-0769-7310')
and hrvdeeprmssd is not null; -- daily returns 205 rows, deep returns the same

-- join tables by date, keep all fitbit data
select participantidentifier as name, fb.date, hrvdeeprmssd, hrvdailyrmssd, ten.exercise from 
(SELECT participantidentifier, date(DATE) as date, hrvdeeprmssd, hrvdailyrmssd from fitbitdailydata 
where participantidentifier in ('MDH-2099-1317', 'MDH-9236-2653', 'MDH-9897-8182', 'MDH-5948-6311', 'MDH-0769-7310')
and hrvdeeprmssd is not null) fb 
left join (select name, date(datetime) as date, exercise --left so we keep all fitbit
from runs1080p
where name in ('MDH-2099-1317', 'MDH-9236-2653', 'MDH-9897-8182', 'MDH-5948-6311', 'MDH-0769-7310')
and datetime >= DATE('2023-1-12')) ten ON 
ten.name = fb.participantidentifier and ten.date = fb.date
order by name, hrvdeeprmssd DESC -- get hrv low to high for each person
;
--  use exercise_daily_hrv: where is this data coming from? look here for more exercise types
select participantidentifier, exercise_type, session_date, hrvdailyrmssd , hrvdeeprmssd  from exercise_daily_hrv 
where participantidentifier in ('MDH-2099-1317', 'MDH-9236-2653', 'MDH-9897-8182', 'MDH-5948-6311', 'MDH-0769-7310')
and session_date  >= DATE('2023-1-12')  -- returns 88 rows
and hrvdeeprmssd is not null; -- returns 14 rows 

select participantidentifier , exercise_type , count(exercise_type) as count
from exercise_view
where participantidentifier in ('MDH-2099-1317', 'MDH-9236-2653', 'MDH-9897-8182', 'MDH-5948-6311', 'MDH-0769-7310')
and session_date  >= DATE('2023-1-12') 
group by participantidentifier, exercise_type
order by participantidentifier ;

--  use exercise_view: where is this data coming from? look here for more exercise types
select participantidentifier, exercise_type, session_date--, hrvdailyrmssd , hrvdeeprmssd  
from exercise_view  
where participantidentifier in ('MDH-2099-1317', 'MDH-9236-2653', 'MDH-9897-8182', 'MDH-5948-6311', 'MDH-0769-7310')
and session_date  >= DATE('2023-1-12')  -- returns 88 rows
--and hrvdeeprmssd is not null; -- returns 14 rows 




 /*
Title: Summary Metric Table
Purpose: gets all the metrics from the 1080 data as well as how each metric has changed from entry n to entry n+1 (by participant)
Author: Alex Christensen
*/

SELECT 	
  name, datetime, concentric_load, peak_power, 
  peak_power - LAG(peak_power)
  OVER (PARTITION BY name ORDER BY datetime) AS peak_power_difference,
  average_power, 
  average_power - LAG(average_power)
  OVER (PARTITION BY name ORDER BY datetime) AS average_power_difference,
  peak_speed, 
  peak_speed - LAG(peak_speed)
  OVER (PARTITION BY name ORDER BY datetime) AS peak_speed_difference,
  average_speed , 
  average_speed - LAG(average_speed)
  OVER (PARTITION BY name ORDER BY datetime) AS average_speed_difference,
  peak_force, 
  peak_force  - LAG(peak_force)
  OVER (PARTITION BY name ORDER BY datetime) AS peak_force_difference,
  average_force , 
  average_force - LAG(average_force)
  OVER (PARTITION BY name ORDER BY datetime) AS average_force_difference
FROM runs1080p  
/*WHERE name = 'MDH-5948-6311' --testing for a single participant
AND datetime >= DATE('2023-1-12')*/
WHERE datetime >= DATE('2023-1-12')
ORDER BY name, datetime ASC  ;





 /*
Title: HRV_PlotsAndData
Purpose: similar to the Fitbit Data Investigation file, just more specific and to be used for plots/data tables
Author: Alex Christensen
*/

/*
-- hrv value 
SELECT participantidentifier, date(DATE) as date, hrvdeeprmssd, hrvdailyrmssd from fitbitdailydata 
where participantidentifier in ('MDH-2099-1317', 'MDH-9236-2653', 'MDH-9897-8182', 'MDH-5948-6311', 'MDH-0769-7310')
and hrvdeeprmssd is not null; -- daily returns 205 rows, deep returns the same
*/
-- join tables by date, keep all fitbit data, using exercise view
select fb.participantidentifier as name, fb.date, hrvdeeprmssd, hrvdailyrmssd, ten.exercise_type from 
(SELECT participantidentifier, date(DATE) as date, hrvdeeprmssd, hrvdailyrmssd from fitbitdailydata 
where participantidentifier in ('MDH-2099-1317', 'MDH-9236-2653', 'MDH-9897-8182', 'MDH-5948-6311', 'MDH-0769-7310')
and hrvdeeprmssd is not null) fb 
left join (select participantidentifier, session_date as date, exercise_type --left so we keep all fitbit
from exercise_view --runs1080p
where participantidentifier in ('MDH-2099-1317', 'MDH-9236-2653', 'MDH-9897-8182', 'MDH-5948-6311', 'MDH-0769-7310')
and session_date >= DATE('2023-1-12')) ten ON 
ten.participantidentifier = fb.participantidentifier and ten.date = fb.date
order by ten.participantidentifier, hrvdeeprmssd DESC -- get hrv low to high for each person
;
